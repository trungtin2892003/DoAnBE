@model List<Cart>
@{
    ViewData["Title"] = "Checkout";
    var totalAmount = Model.Sum(x => x.TotalPrice);
}

<div class="container mt-5">
    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h3>Thông tin đặt hàng</h3>
                </div>
                <div class="card-body">
                    <form id="checkoutForm" class="needs-validation" novalidate>
                        <div class="form-group mb-3">
                            <label>Họ tên</label>
                            <input type="text" class="form-control" id="customerName" required>
                            <div class="invalid-feedback">Vui lòng nhập họ tên</div>
                        </div>
                        <div class="form-group mb-3">
                            <label>Số điện thoại</label>
                            <input type="tel" class="form-control" id="phone" pattern="[0-9]{10}" required>
                            <div class="invalid-feedback">Vui lòng nhập số điện thoại hợp lệ (10 số)</div>
                        </div>
                        <div class="form-group mb-3">
                            <label>Địa chỉ</label>
                            <textarea class="form-control" id="address" required></textarea>
                            <div class="invalid-feedback">Vui lòng nhập địa chỉ</div>
                        </div>
                        <div class="form-group mb-3">
                            <label>Phương thức thanh toán</label>
                            <select class="form-control" id="paymentMethod" required>
                                <option value="">Chọn phương thức thanh toán</option>
                                <option value="COD">Thanh toán khi nhận hàng</option>
                                <option value="Banking">Chuyển khoản</option>
                            </select>
                            <div class="invalid-feedback">Vui lòng chọn phương thức thanh toán</div>
                        </div>
                        <button type="submit" class="btn btn-primary mt-3">Đặt hàng</button>
                    </form>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <h3>Đơn hàng của bạn</h3>
                </div>
                <div class="card-body">
                    @foreach (var item in Model)
                    {
                        <div class="d-flex justify-content-between mb-2">
                            <span>@item.ProductName x @item.Quantity</span>
                            <span>@item.TotalPrice.ToString("N0") đ</span>
                        </div>
                    }
                    <hr>
                    <div class="d-flex justify-content-between">
                        <strong>Tổng cộng:</strong>
                        <strong>@totalAmount.ToString("N0") đ</strong>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('#checkoutForm').on('submit', function(e) {
                e.preventDefault();
                
                const form = $(this)[0];
                if (!form.checkValidity()) {
                    e.stopPropagation();
                    form.classList.add('was-validated');
                    return;
                }

                const submitButton = $(this).find('button[type="submit"]');
                submitButton.prop('disabled', true);
                
                const orderData = {
                    customerName: $('#customerName').val().trim(),
                    phone: $('#phone').val().trim(),
                    address: $('#address').val().trim(),
                    paymentMethod: $('#paymentMethod').val(),
                    totalPrice: @totalAmount
                };

                $.ajax({
                    url: '/Cart/ProcessCheckout',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(orderData),
                    success: function(response) {
                        // Cập nhật status của cart items
                        cartItems.forEach(function(item) {
                            item.Status = "Ordered";
                        });
                        
                        window.location.href = '/Cart/OrderSuccess/' + response.orderId;
                    },
                    error: function(xhr, status, error) {
                        let errorMessage = 'Có lỗi xảy ra khi đặt hàng';
                        console.error('Status:', status);
                        console.error('Error:', error);
                        console.error('Response:', xhr.responseText);
                        
                        if (xhr.responseText) {
                            try {
                                const response = JSON.parse(xhr.responseText);
                                errorMessage = response.message;
                                if (response.error) {
                                    console.error('Detailed error:', response.error);
                                    errorMessage += '\nChi tiết lỗi: ' + response.error;
                                }
                            } catch (e) {
                                console.error('Error parsing response:', e);
                            }
                        }
                        alert(errorMessage);
                        submitButton.prop('disabled', false);
                    }
                });
            });
        });
    </script>
}
