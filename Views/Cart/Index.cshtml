@model List<ShopCake.Models.Cart>

@{
    ViewData["Title"] = "Cart";
}
<div class="breadcrumb-option">
    <div class="container">
        <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-6">
                <div class="breadcrumb__text">
                    <h2>Shopping cart</h2>
                </div>
            </div>
            <div class="col-lg-6 col-md-6 col-sm-6">
                <div class="breadcrumb__links">
                    <a href="/">Home</a>
                    <span>Shopping cart</span>
                </div>
            </div>
        </div>
    </div>
</div>
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">
        @TempData["Error"]
    </div>
}

<section class="shopping-cart spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-8">
                <div class="shopping__cart__table">
                    <table>
                        <thead>
                            <tr>
                                <th>Product</th>
                                <th>Quantity</th>
                                <th>Total</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td class="product__cart__item">
                                        <div class="product__cart__item__pic">
                                            <img src="~/Data/Product/@item.ProductImage" alt="@item.ProductName" style="width: 150px; height: 150px;" />
                                        </div>
                                        <div class="product__cart__item__text">



                                            <h6>@item.ProductName</h6>
                                            <h5>@item.Price.ToString("C")</h5>
                                        </div>
                                       
                                    </td>
                                    <td class="quantity__item">
                                        <div class="quantity d-flex align-items-left">
                                            <button class="btn btn-outline-secondary dec qtybtn" onclick="updateQuantity(@item.PRO_ID, -1)">-</button>
                                            <input type="number" id="qty-@item.PRO_ID" value="@item.Quantity" readonly class="form-control text-center qty-input">
                                            <button class="btn btn-outline-secondary inc qtybtn" onclick="updateQuantity(@item.PRO_ID, 1)">+</button>
                                        </div>
                                    </td>
                                 


                                    <td class="cart__price" id="total-price-@item.PRO_ID">@item.TotalPrice.ToString("C")</td>

                                    <td class="cart__close">
                                        <a asp-controller="Cart" asp-action="RemoveItem" asp-route-id="@item.PRO_ID">
                                            <span class="icon_close"></span>
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="row">
                    <div class="col-lg-6 col-md-6 col-sm-6">
                        <div class="continue__btn">
                            <a href="/">Continue Shopping</a>
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6">
                        <div class="continue__btn update__btn">
                            <a href="#"><i class="fa fa-spinner"></i> Update cart</a>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="cart__total">
                    <h6>Cart total</h6>
                    <ul>
                        <li>Subtotal <span>@Model.Sum(x => x.TotalPrice).ToString("C")</span></li>
                        <li>Total <span id="cart-total">@Model.Sum(x => x.TotalPrice).ToString("C")</span></li>

                    </ul>
                    <a href="#" class="primary-btn">Proceed to checkout</a>
                </div>
            </div>
        </div>
    </div>
</section>
<script>
    var userId = '@ViewData["USE_ID"]';
    console.log("USE_ID:", userId);
</script>

<script>
    function updateQuantity(productId, change) {
        // Lấy số lượng hiện tại
        var currentQty = parseInt(document.getElementById(`qty-${productId}`).value);
        var newQty = currentQty + change;

        // Ngăn số lượng về 0 hoặc âm
        if (newQty <= 0) {
            alert("Quantity must be at least 1.");
            return;
        }

        // Gửi yêu cầu AJAX để cập nhật số lượng
        $.ajax({
            url: '/Cart/UpdateQuantity', // Action để cập nhật số lượng
            type: 'POST',
            data: { productId: productId, quantity: newQty },
            success: function (response) {
                if (response.success) {
                    // Cập nhật giao diện
                    document.getElementById(`qty-${productId}`).value = newQty; // Số lượng mới
                    document.querySelector(`#total-price-${productId}`).innerText = response.newTotal.toLocaleString('en-US', { style: 'currency', currency: 'USD' }); // Tổng tiền sản phẩm

                    // Cập nhật tổng tiền giỏ hàng
                    document.getElementById('cart-total').innerText = response.cartTotal.toLocaleString('en-US', { style: 'currency', currency: 'USD' });
                } else {
                    alert("Failed to update quantity.");
                }
            },
            error: function () {
                alert("An error occurred. Please try again.");
            }
        });
    }
</script>
<script>
    $(document).ready(function () {
        $.ajax({
            url: '/Cart/GetCartItems',
            type: 'GET',
            success: function (data) {
                let cartHtml = '';
                if (data.length > 0) {
                    data.forEach(item => {
                        cartHtml += `
                            <tr>
                                <td><img src="${item.productImage}" alt="${item.productName}" style="width: 50px;"></td>
                                <td>${item.productName}</td>
                                <td>${item.quantity}</td>
                                <td>${item.price.toFixed(2)}</td>
                                <td>${item.totalPrice.toFixed(2)}</td>
                            </tr>`;
                    });
                } else {
                    cartHtml = '<tr><td colspan="5">Giỏ hàng trống</td></tr>';
                }

                $('#cartTableBody').html(cartHtml);
            },
            error: function (err) {
                console.error('Lỗi khi lấy giỏ hàng:', err);
            }
        });
    });

</script>
<style>
    .quantity {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 5px;
        margin-left: -100px;
    }

    .qtybtn {
        width: 35px;
        height: 35px;
        border-radius: 5px;
        font-size: 18px;
        font-weight: bold;
        text-align: center;
        padding: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        border: 1px solid #ddd;
        background-color: #f9f9f9;
        transition: all 0.3s ease;
    }

        .qtybtn:hover {
            background-color: #007bff;
            color: white;
            border-color: #007bff;
        }

    .qty-input {
        width: 60px;
        height: 35px;
        border: 1px solid #ddd;
        border-radius: 5px;
        text-align: center;
        padding: 0;
        font-size: 16px;
        margin-left: 4px;
    }

    .btn-outline-secondary {
        border-color: #ddd;
        color: #555;
        background-color: #f9f9f9;
    }

        .btn-outline-secondary:hover {
            background-color: #007bff;
            color: white;
            border-color: #007bff;
        }
</style>